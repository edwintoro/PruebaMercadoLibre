{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\EdwinToro\\\\Downloads\\\\BackPythonMercadolibre\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [values, setValues] = React.useState({\n    email: \"\",\n    password: \"\"\n  });\n  function handleSubmit(evt) {\n    /*\n      Previene el comportamiento default de los\n      formularios el cual recarga el sitio\n    */\n    evt.preventDefault();\n\n    // Aquí puedes usar values para enviar la información\n  }\n\n  function handleChange(evt) {\n    /*\n      evt.target es el elemento que ejecuto el evento\n      name identifica el input y value describe el valor actual\n    */\n    const {\n      target\n    } = evt;\n    const {\n      name,\n      value\n    } = target;\n\n    /*\n      Este snippet:\n      1. Clona el estado actual\n      2. Reemplaza solo el valor del\n         input que ejecutó el evento\n    */\n    const newValues = {\n      ...values,\n      [name]: value\n    };\n\n    // Sincroniza el estado de nuevo\n    setValues(newValues);\n  }\n  const [data, SetData] = useState('colombia');\n  const nombre = \"david\";\n  const id = \"12\";\n  const url = `http://localhost:5000/login/${nombre}/${id}`;\n  console.log(url);\n  useEffect(() => {\n    fetch(url).then(res => res.json()).then(data => {\n      SetData(data);\n      console.log(\"data\", data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: data.nombre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"email\",\n        name: \"email\",\n        type: \"email\",\n        value: values.email,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"password\",\n        name: \"password\",\n        type: \"password\",\n        value: values.password,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bdHekxsBj97IfWR2e3sMOoiKD4A=\");\n_c = App;\n;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","values","setValues","email","password","handleSubmit","evt","preventDefault","handleChange","target","name","value","newValues","data","SetData","nombre","id","url","console","log","fetch","then","res","json","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","onChange","_c","$RefreshReg$"],"sources":["D:/Users/EdwinToro/Downloads/BackPythonMercadolibre/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\n\nexport default function App(){\n\n\n  const [values, setValues] = React.useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  function handleSubmit(evt) {\n    /*\n      Previene el comportamiento default de los\n      formularios el cual recarga el sitio\n    */\n    evt.preventDefault();\n\n    // Aquí puedes usar values para enviar la información\n  }\n\n  function handleChange(evt) {\n    /*\n      evt.target es el elemento que ejecuto el evento\n      name identifica el input y value describe el valor actual\n    */\n    const { target } = evt;\n    const { name, value } = target;\n\n    /*\n      Este snippet:\n      1. Clona el estado actual\n      2. Reemplaza solo el valor del\n         input que ejecutó el evento\n    */\n    const newValues = {\n      ...values,\n      [name]: value,\n    };\n\n    // Sincroniza el estado de nuevo\n    setValues(newValues);\n  }\n\n  const [data, SetData] = useState('colombia')\n\n  const nombre = \"david\";\n  const id = \"12\"\n  const url = `http://localhost:5000/login/${nombre}/${id}`;\n\n  console.log(url)\n  useEffect(()=> {\n\n    fetch(url).then(\n\n      res=> res.json()\n    ).then(\n        data=> {\n          SetData(data)\n          console.log(\"data\",data)\n          \n\n        }\n    )\n  }, [])\n\n\n\n  return (\n    <div>\n      <h1>{data.nombre}</h1>\n      <form onSubmit={handleSubmit}>\n      <label htmlFor=\"email\">Email</label>\n      <input\n        id=\"email\"\n        name=\"email\"\n        type=\"email\"\n        value={values.email}\n        onChange={handleChange}\n      />\n      <label htmlFor=\"password\">Password</label>\n      <input\n        id=\"password\"\n        name=\"password\"\n        type=\"password\"\n        value={values.password}\n        onChange={handleChange}\n      />\n      <button type=\"submit\">Sign Up</button>\n    </form>\n    \n  </div>\n  );\n};\n\n\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}